import * as ts from 'typescript'

export function createResolver(modules: ts.ObjectLiteralExpression) {
  return ts.factory.createImmediatelyInvokedFunctionExpression(
    [
      ts.factory.createFunctionDeclaration(
        undefined,
        undefined,
        undefined,
        ts.factory.createIdentifier('require'),
        undefined,
        [
          ts.factory.createParameterDeclaration(
            undefined,
            undefined,
            undefined,
            'id'
          )
        ],
        undefined,
        ts.factory.createBlock(
          [
            ts.factory.createVariableStatement(
              undefined,
              ts.factory.createVariableDeclarationList(
                [
                  ts.factory.createVariableDeclaration(
                    ts.factory.createArrayBindingPattern([
                      ts.factory.createBindingElement(
                        undefined,
                        undefined,
                        ts.factory.createIdentifier('fn')
                      ),
                      ts.factory.createBindingElement(
                        undefined,
                        undefined,
                        ts.factory.createIdentifier('mapping')
                      )
                    ]),
                    undefined,
                    undefined,
                    ts.factory.createElementAccessExpression(
                      ts.factory.createIdentifier('modules'),
                      ts.factory.createIdentifier('id')
                    )
                  )
                ],
                ts.NodeFlags.Const
              )
            ),
            ts.factory.createFunctionDeclaration(
              undefined,
              undefined,
              undefined,
              'localRequire',
              undefined,
              [
                ts.factory.createParameterDeclaration(
                  undefined,
                  undefined,
                  undefined,
                  'relativePath'
                )
              ],
              undefined,
              ts.factory.createBlock(
                [
                  ts.factory.createReturnStatement(
                    ts.factory.createCallExpression(
                      ts.factory.createIdentifier('require'),
                      undefined,
                      [
                        ts.factory.createElementAccessExpression(
                          ts.factory.createIdentifier('mapping'),
                          ts.factory.createIdentifier('relativePath')
                        )
                      ]
                    )
                  )
                ],
                true
              )
            ),
            ts.factory.createVariableStatement(
              undefined,
              ts.factory.createVariableDeclarationList(
                [
                  ts.factory.createVariableDeclaration(
                    ts.factory.createIdentifier('module'),
                    undefined,
                    undefined,
                    ts.factory.createObjectLiteralExpression(
                      [
                        ts.factory.createPropertyAssignment(
                          ts.factory.createIdentifier('exports'),
                          ts.factory.createObjectLiteralExpression([], false)
                        )
                      ],
                      false
                    )
                  )
                ],
                ts.NodeFlags.Const
              )
            ),
            ts.factory.createExpressionStatement(
              ts.factory.createCallExpression(
                ts.factory.createIdentifier('fn'),
                undefined,
                [
                  ts.factory.createIdentifier('localRequire'),
                  ts.factory.createIdentifier('module'),
                  ts.factory.createPropertyAccessExpression(
                    ts.factory.createIdentifier('module'),
                    ts.factory.createIdentifier('exports')
                  )
                ]
              )
            ),
            ts.factory.createReturnStatement(
              ts.factory.createElementAccessExpression(
                ts.factory.createIdentifier('module'),
                ts.factory.createIdentifier('exports')
              )
            )
          ],
          true
        )
      ),
      ts.factory.createExpressionStatement(
        ts.factory.createCallExpression(
          ts.factory.createIdentifier('require'),
          undefined,
          [ts.factory.createNumericLiteral(0)]
        )
      )
    ],
    ts.factory.createParameterDeclaration(
      undefined,
      undefined,
      undefined,
      'modules'
    ),
    modules
  )
}
